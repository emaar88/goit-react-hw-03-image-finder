{"version":3,"sources":["components/Loader/Loader.js","components/Button/Button.js","components/ButtonUp/ButtonUp.js","components/SearchBar/SearchBar.js","components/services/imagesApi.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/App.js","serviceWorker.js","index.js"],"names":["App","className","type","color","height","width","timeout","React","Component","Button","onClick","ButtonUp","SearchForm","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","autoComplete","autoFocus","placeholder","onChange","fetchImagesWithQuery","searchQuery","page","axios","get","then","response","data","hits","console","log","Modal","handleKeyDown","event","code","clickModal","backdropClick","currentTarget","window","addEventListener","removeEventListener","src","largeImageURL","alt","tags","ImageGalleryItem","imageModal","toggleModal","prevState","webformatURL","key","id","ImageGallery","images","length","map","image","loading","error","fetchImages","imagesApi","catch","finally","fetchGallery","setTimeout","scrollTo","top","scrollY","behavior","toUp","windowHeight","document","documentElement","clientHeight","handleSearchBarSubmit","query","prevProps","prevQuery","nextQuery","message","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb4523a8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"./Loader.scss\";\r\n\r\nexport default class App extends React.Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <div className=\"loaderContainer\">\r\n        <Loader\r\n          type=\"Circles\"\r\n          color=\"#00BFFF\"\r\n          height={80}\r\n          width={80}\r\n          timeout={1000}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Button.scss\";\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"./../Button/Button.scss\";\r\n\r\nconst ButtonUp = ({ onClick }) => {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Go To Up\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonUp;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./SearchBar.scss\";\r\n\r\nexport default class SearchForm extends Component {\r\n  state = { inputValue: \"\" };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.inputValue);\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.inputValue}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst fetchImagesWithQuery = (searchQuery, page = 1) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=15388993-afe6d4c7cebda1ca737d5f782&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\nconsole.log({ fetchImagesWithQuery });\r\nexport default { fetchImagesWithQuery };\r\n// * в результатів запитів буде багато функц\r\n","import React, { Component } from \"react\";\r\nimport \"./Modal.scss\";\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  handleKeyDown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.clickModal();\r\n    }\r\n  };\r\n  backdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      console.log(e.target);\r\n      console.log(e.currentTarget);\r\n      this.props.clickModal();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.backdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.largeImageURL} alt={this.props.tags} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"./../Modal/Modal\";\r\nimport \"./ImageGalleryItem.scss\";\r\n\r\nclass ImageGalleryItem extends Component {\r\n  state = {\r\n    imageModal: false,\r\n  };\r\n  toggleModal = () => {\r\n    this.setState((prevState) => ({ imageModal: !prevState.imageModal }));\r\n  };\r\n\r\n  render() {\r\n    const { imageModal } = this.state;\r\n    return (\r\n      <li className=\"ImageGalleryItem\">\r\n        {imageModal && (\r\n          <Modal\r\n            largeImageURL={this.props.largeImageURL}\r\n            tags={this.props.tags}\r\n            clickModal={this.toggleModal}\r\n          />\r\n        )}\r\n        <img\r\n          src={this.props.webformatURL}\r\n          alt={this.props.tags}\r\n          className=\"ImageGalleryItem-image\"\r\n          key={this.props.id}\r\n          onClick={this.toggleModal}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"./../ImageGalleryItem/ImageGalleryItem\";\r\nimport \"./ImageGallery.scss\";\r\n\r\nconst ImageGallery = ({ images, imageModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.length > 0 ? (\r\n        images.map((image) => <ImageGalleryItem {...image} key={image.id} />)\r\n      ) : (\r\n        <li className=\"alert\">No have contacts!</li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\nimport Loader from \"./Loader/\";\nimport Button from \"./Button/\";\nimport ButtonUp from \"./ButtonUp/\";\nimport SearchBar from \"./SearchBar/\";\nimport imagesApi from \"./services/\";\nimport \"./App.scss\";\nimport ImageGallery from \"./ImageGallery/\";\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    loading: false,\n    error: null,\n    searchQuery: \"\",\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    console.log(\"prevQuery:\" + prevQuery, \"nextquery:\" + nextQuery);\n    if (prevQuery !== nextQuery) {\n      this.fetchImages();\n    }\n  }\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n    this.setState({ loading: true });\n    console.log(imagesApi);\n    imagesApi\n      .fetchImagesWithQuery(searchQuery, page)\n      .then((images) =>\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        }))\n      )\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  fetchGallery = () => {\n    this.setState((prevState) => ({\n      page: prevState.page + 1,\n    }));\n    this.fetchImages();\n    setTimeout(() => {\n      window.scrollTo({\n        top: +window.scrollY + 1162,\n        behavior: \"smooth\",\n      });\n    }, 700);\n  };\n\n  toUp = () => {\n    setTimeout(() => {\n      let windowHeight = document.documentElement.clientHeight;\n      console.log(windowHeight);\n      window.scrollTo({\n        top: windowHeight - 1162,\n        behavior: \"smooth\",\n      });\n    }, 800);\n  };\n\n  handleSearchBarSubmit = (query) => {\n    console.log(query);\n    this.setState({ searchQuery: query, page: 1, images: [] });\n  };\n\n  render() {\n    const { images, loading } = this.state;\n    return (\n      <>\n        <SearchBar onSubmit={this.handleSearchBarSubmit} />​\n        {images.length > 0 && (\n          <ImageGallery images={images} imageModal={this.toggleModal} />\n        )}\n        ​{loading && <Loader message=\"Loading...\" />}\n        {images.length > 0 && !loading && (\n          <>\n            <div className=\"buttonContainer\">\n              <Button onClick={this.fetchGallery}></Button>\n              <ButtonUp onClick={this.toUp}></ButtonUp>\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}